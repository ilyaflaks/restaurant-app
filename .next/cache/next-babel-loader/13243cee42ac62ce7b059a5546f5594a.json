{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/app/components/restaurantList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query Restaurants {\\n      restaurants {\\n        id\\n        name\\n        description\\n        dishes {\\n          name\\n          price\\n          description\\n          id\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ($id: ID!) {\\n      restaurants(id: $id) {\\n        id\\n        name\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useEffect, useState } from \"react\"; //import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction Fetchdish(props) {\n  _s();\n\n  console.log(\"props.id\");\n  console.log(props.id);\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: props.id\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"data from fetch dishes:\");\n  console.log(data); // let dishes = data;\n  // console.log(\"inside fetch dishes, dishes:\");\n  // console.log(dishes);\n\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }, \"We in dishes fetch \", data.length);\n}\n\n_s(Fetchdish, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Fetchdish;\n\nfunction RestaurantList(props) {\n  _s2();\n\n  var _this2 = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(false),\n      showDishes = _useState3[0],\n      setShowDishes = _useState3[1];\n\n  var _useContext2 = useContext(AppContext),\n      addItem = _useContext2.addItem,\n      isAuthenticated = _useContext2.isAuthenticated,\n      user = _useContext2.user;\n\n  console.log(\"IN REST LIST, isAuthenticated:\");\n  console.log(isAuthenticated);\n  console.log(\"IN REST LIST, user:\");\n  console.log(user);\n  useEffect(function () {\n    setShowDishes(true);\n  }, [restaurantID]);\n  var GET_RESTAURANTS = gql(_templateObject2());\n\n  var _useQuery2 = useQuery(GET_RESTAURANTS),\n      loading = _useQuery2.loading,\n      error = _useQuery2.error,\n      data = _useQuery2.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data:\");\n  console.log(data.restaurants);\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  }) || [];\n\n  function DishesList() {\n    var _this = this;\n\n    if (restaurantID) {\n      console.log(\"data.restaurants:\");\n      console.log(data.restaurants);\n      var selectedRes = data.restaurants.filter(function (rest) {\n        return rest.id === restaurantID;\n      });\n      var restName = selectedRes[0].name;\n      var dishArray = selectedRes[0].dishes;\n      var mapThroughDishes = dishArray.map(function (dish) {\n        return __jsx(Col, {\n          xs: \"6\",\n          sm: \"4\",\n          style: {\n            padding: 0\n          },\n          key: dish.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }\n        }, __jsx(Card, {\n          style: {\n            margin: \"0 10px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }\n        }, __jsx(CardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }\n        }, __jsx(CardTitle, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }\n        }, dish.name), __jsx(CardText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }\n        }, \"$\", dish.price), __jsx(CardText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }\n        }, dish.description)), __jsx(\"div\", {\n          className: \"card-footer\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }\n        }, __jsx(Button // color=\"info\"\n        , {\n          outline: true,\n          color: \"primary\",\n          onClick: function onClick() {\n            return addItem(dish);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }\n        }, \"+ Add To Cart\"))));\n      });\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }), \" \", __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 18\n        }\n      }, restName, \" Menu\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }), mapThroughDishes);\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\"\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, __jsx(CardBody, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, __jsx(CardTitle, {\n        tag: \"h5\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }, res.name), __jsx(CardText, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          if (user) {\n            setRestaurantID(res.id);\n          } else {\n            alert(\"Please log in to see the menu and add items to your cart\");\n          }\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, \"See the Menu\"))));\n    });\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    }, __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, restList), user && __jsx(DishesList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 18\n      }\n    }));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 12\n      }\n    }, \" No Restaurants Found\");\n  }\n}\n\n_s2(RestaurantList, \"b2BwsnZrN9e5qHXjYobCeSUj4lk=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = RestaurantList;\nexport default RestaurantList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Fetchdish\");\n$RefreshReg$(_c2, \"RestaurantList\");","map":{"version":3,"sources":["/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/app/components/restaurantList.js"],"names":["gql","useQuery","Dishes","useContext","useEffect","useState","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","Fetchdish","props","console","log","id","GET_RESTAURANT_DISHES","variables","loading","error","data","length","RestaurantList","restaurantID","setRestaurantID","cart","state","setState","showDishes","setShowDishes","addItem","isAuthenticated","user","GET_RESTAURANTS","restaurants","searchQuery","filter","res","name","toLowerCase","includes","search","DishesList","selectedRes","rest","restName","dishArray","dishes","mapThroughDishes","map","dish","padding","margin","price","description","restList","alert"],"mappings":"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","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useEffect, useState } from \"react\";\n\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction Fetchdish(props) {\n  console.log(\"props.id\");\n  console.log(props.id);\n  const GET_RESTAURANT_DISHES = gql`\n    query ($id: ID!) {\n      restaurants(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: props.id },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  console.log(\"data from fetch dishes:\");\n  console.log(data);\n  // let dishes = data;\n  // console.log(\"inside fetch dishes, dishes:\");\n  // console.log(dishes);\n\n  return <h1>We in dishes fetch {data.length}</h1>;\n}\n\nfunction RestaurantList(props) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const [showDishes, setShowDishes] = useState(false);\n  const { addItem, isAuthenticated, user } = useContext(AppContext);\n\n  console.log(\"IN REST LIST, isAuthenticated:\");\n  console.log(isAuthenticated);\n  console.log(\"IN REST LIST, user:\");\n  console.log(user);\n\n  useEffect(() => {\n    setShowDishes(true);\n  }, [restaurantID]);\n\n  const GET_RESTAURANTS = gql`\n    query Restaurants {\n      restaurants {\n        id\n        name\n        description\n        dishes {\n          name\n          price\n          description\n          id\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data:`);\n  console.log(data.restaurants);\n\n  let searchQuery =\n    data.restaurants.filter((res) => {\n      return res.name.toLowerCase().includes(props.search);\n    }) || [];\n\n  function DishesList() {\n    if (restaurantID) {\n      console.log(\"data.restaurants:\");\n      console.log(data.restaurants);\n      let selectedRes = data.restaurants.filter(\n        (rest) => rest.id === restaurantID\n      );\n      let restName = selectedRes[0].name;\n      let dishArray = selectedRes[0].dishes;\n      const mapThroughDishes = dishArray.map((dish) => (\n        <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={dish.id}>\n          <Card style={{ margin: \"0 10px\" }}>\n            {/* <CardImg\n              top={true}\n              style={{ height: 150, width: 150 }}\n              src={`http://localhost:1337${res.image.url}`}\n            /> */}\n            <CardBody>\n              <CardTitle>{dish.name}</CardTitle>\n              <CardText>${dish.price}</CardText>\n              <CardText>{dish.description}</CardText>\n            </CardBody>\n            <div className=\"card-footer\">\n              <Button\n                // color=\"info\"\n                outline\n                color=\"primary\"\n                onClick={() => addItem(dish)}\n              >\n                + Add To Cart\n              </Button>\n            </div>\n          </Card>\n        </Col>\n      ));\n\n      return (\n        <div>\n          <br /> <h4>{restName} Menu</h4>\n          <br />\n          {mapThroughDishes}\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n\n  if (searchQuery.length > 0) {\n    const restList = searchQuery.map((res) => (\n      <Col xs=\"6\" sm=\"4\" key={res.id}>\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n          {/* <CardImg\n            top={true}\n            style={{ height: 200 }}\n            src={`http://localhost:1337` + res.image.url}\n          /> */}\n          <CardBody>\n            <CardTitle tag=\"h5\">{res.name}</CardTitle>\n            <CardText>{res.description}</CardText>\n          </CardBody>\n          <div className=\"card-footer\">\n            <Button\n              color=\"info\"\n              onClick={() => {\n                if (user) {\n                  setRestaurantID(res.id);\n                } else {\n                  alert(\n                    \"Please log in to see the menu and add items to your cart\"\n                  );\n                }\n              }}\n            >\n              See the Menu\n            </Button>\n          </div>\n        </Card>\n      </Col>\n    ));\n\n    return (\n      <Container>\n        <Row xs=\"3\">{restList}</Row>\n        {user && <DishesList />}\n        {/* <Row xs=\"3\">{renderDishes(restaurantID)}</Row> */}\n        {/* <Fetchdish id={restaurantID} /> */}\n      </Container>\n    );\n  } else {\n    return <h1> No Restaurants Found</h1>;\n  }\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}