{"ast":null,"code":"var _jsxFileName = \"/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/app/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Cart from \"../components/cart\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql } from \"@apollo/client\";\nimport RestaurantList from \"../components/restaurantList\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\n\nfunction Home() {\n  _s();\n\n  var API_URL = process.env.NEXT_PUBLIC_API_URL || //heroku.com/Ilya.../graphql\n  //https://ilya-restaurant-app.herokuapp.com/graphql\n  \"http://localhost:4000/graphql\"; //console.log(`URL: ${process.env.NEXT_PUBLIC_API_URL}`);\n\n  var _useState = useState(\"\"),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  fetch(\"/api/buldlog\").then(); // console.log(\"process.env.NEXT_PUBLIC_API_URL:\");\n  // console.log(process.env.NEXT_PUBLIC_API_URL);\n  // console.log(\"API_URL: \");\n  // console.log(API_URL);\n\n  var cache = new InMemoryCache();\n  var client = new ApolloClient({\n    uri: API_URL,\n    cache: new InMemoryCache()\n  }); // client\n  //   .query({\n  //     query: gql`\n  //       query Restaurants {\n  //         restaurants {\n  //           id\n  //           name\n  //           description\n  //           dishes {\n  //             name\n  //           }\n  //         }\n  //       }\n  //     `,\n  //   })\n  //   .then((result) => console.log(result));\n\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \" Local Restaurants\"), __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \" Search \"), __jsx(Input, {\n    onChange: function onChange(e) {\n      return setQuery(e.target.value.toLocaleLowerCase());\n    },\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), __jsx(RestaurantList, {\n    search: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), __jsx(Cart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \" \"));\n}\n\n_s(Home, \"HYX2QbDDdTtlu7GfoQbAPZOIM6k=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/app/pages/index.js"],"names":["React","useState","Cart","ApolloClient","InMemoryCache","ApolloProvider","gql","RestaurantList","InputGroup","InputGroupAddon","Input","Home","API_URL","process","env","NEXT_PUBLIC_API_URL","query","setQuery","fetch","then","cache","client","uri","e","target","value","toLocaleLowerCase"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,GAJF,QAKO,gBALP;AAOA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,KAAtC,QAAmD,YAAnD;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,MAAMC,OAAO,GACXC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC;AACnC;AACA,iCAHF,CADc,CAKd;;AALc,kBAMYd,QAAQ,CAAC,EAAD,CANpB;AAAA,MAMPe,KANO;AAAA,MAMAC,QANA;;AAOdC,EAAAA,KAAK,CAAC,cAAD,CAAL,CAAsBC,IAAtB,GAPc,CASd;AACA;AAEA;AACA;;AACA,MAAMC,KAAK,GAAG,IAAIhB,aAAJ,EAAd;AAEA,MAAMiB,MAAM,GAAG,IAAIlB,YAAJ,CAAiB;AAC9BmB,IAAAA,GAAG,EAAEV,OADyB;AAE9BQ,IAAAA,KAAK,EAAE,IAAIhB,aAAJ;AAFuB,GAAjB,CAAf,CAhBc,CAqBd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEiB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AACE,IAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,aAAON,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,iBAAf,EAAD,CAAf;AAAA,KADZ;AAEE,IAAA,KAAK,EAAEV,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,EAYE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAbF,CADF;AAiBD;;GAvDQL,I;;KAAAA,I;AAwDT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Cart from \"../components/cart\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  gql,\n} from \"@apollo/client\";\n\nimport RestaurantList from \"../components/restaurantList\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\n\nfunction Home() {\n  const API_URL =\n    process.env.NEXT_PUBLIC_API_URL || //heroku.com/Ilya.../graphql\n    //https://ilya-restaurant-app.herokuapp.com/graphql\n    \"http://localhost:4000/graphql\";\n  //console.log(`URL: ${process.env.NEXT_PUBLIC_API_URL}`);\n  const [query, setQuery] = useState(\"\");\n  fetch(\"/api/buldlog\").then();\n\n  // console.log(\"process.env.NEXT_PUBLIC_API_URL:\");\n  // console.log(process.env.NEXT_PUBLIC_API_URL);\n\n  // console.log(\"API_URL: \");\n  // console.log(API_URL);\n  const cache = new InMemoryCache();\n\n  const client = new ApolloClient({\n    uri: API_URL,\n    cache: new InMemoryCache(),\n  });\n\n  // client\n  //   .query({\n  //     query: gql`\n  //       query Restaurants {\n  //         restaurants {\n  //           id\n  //           name\n  //           description\n  //           dishes {\n  //             name\n  //           }\n  //         }\n  //       }\n  //     `,\n  //   })\n  //   .then((result) => console.log(result));\n\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"search\">\n        <h2> Local Restaurants</h2>\n        <InputGroup>\n          <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n          <Input\n            onChange={(e) => setQuery(e.target.value.toLocaleLowerCase())}\n            value={query}\n          />\n        </InputGroup>\n        <br></br>\n      </div>\n      <RestaurantList search={query} />\n      <Cart> </Cart>\n    </ApolloProvider>\n  );\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}