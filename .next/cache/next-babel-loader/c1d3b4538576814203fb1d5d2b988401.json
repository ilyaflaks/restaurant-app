{"ast":null,"code":"var _jsxFileName = \"/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/app/components/restaurantList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useEffect, useState } from \"react\"; //import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction Fetchdish(props) {\n  console.log(\"props.id\");\n  console.log(props.id);\n  const GET_RESTAURANT_DISHES = gql`\n    query ($id: ID!) {\n      restaurants(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: props.id\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"data from fetch dishes:\");\n  console.log(data); // let dishes = data;\n  // console.log(\"inside fetch dishes, dishes:\");\n  // console.log(dishes);\n\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }, \"We in dishes fetch \", data.length);\n}\n\nfunction RestaurantList(props) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState(0);\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const {\n    0: showDishes,\n    1: setShowDishes\n  } = useState(false);\n  const {\n    addItem,\n    isAuthenticated,\n    user\n  } = useContext(AppContext);\n  console.log(\"IN REST LIST, isAuthenticated:\");\n  console.log(isAuthenticated);\n  console.log(\"IN REST LIST, user:\");\n  console.log(user);\n  useEffect(() => {\n    setShowDishes(true);\n  }, [restaurantID]);\n  const GET_RESTAURANTS = gql`\n    query Restaurants {\n      restaurants {\n        id\n        name\n        description\n        dishes {\n          name\n          price\n          description\n          id\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(`Query Data:`);\n  console.log(data.restaurants);\n  let searchQuery = data.restaurants.filter(res => {\n    return res.name.toLowerCase().includes(props.search);\n  }) || [];\n\n  function DishesList() {\n    if (restaurantID) {\n      console.log(\"data.restaurants:\");\n      console.log(data.restaurants);\n      let selectedRes = data.restaurants.filter(rest => rest.id === restaurantID);\n      console.log(\"selectedRes\");\n      console.log(selectedRes);\n      let restName = selectedRes[0].name;\n      console.log(\"restName\");\n      console.log(restName);\n      let dishArray = selectedRes[0].dishes;\n      console.log(\"dishArray\");\n      console.log(dishArray);\n      const mapThroughDishes = dishArray.map(dish => __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: dish.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, __jsx(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, __jsx(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, dish.name), __jsx(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, \"$\", dish.price), __jsx(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, dish.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, __jsx(Button // color=\"info\"\n      , {\n        outline: true,\n        color: \"primary\",\n        onClick: () => addItem(dish),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }\n      }, \"+ Add To Cart\")))));\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }), \" \", __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 18\n        }\n      }, restName, \" Menu\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }), mapThroughDishes);\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 14\n        }\n      });\n    }\n  } // const renderDishes = (restaurantID) => {\n  //   return <Dishes restId={restaurantID}> </Dishes>;\n  // };\n\n\n  if (searchQuery.length > 0) {\n    const restList = searchQuery.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: res.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, __jsx(CardTitle, {\n      tag: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, res.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      color: \"info\",\n      onClick: () => {\n        //    setShowDishes(false);\n        setRestaurantID(res.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, \"Explore\")))));\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }, isAuthenticated && __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }, \"HI USER\"), !isAuthenticated && __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 30\n      }\n    }, \"Pls log in\"), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, restList), __jsx(DishesList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 12\n      }\n    }, \" No Restaurants Found\");\n  }\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/app/components/restaurantList.js"],"names":["gql","useQuery","Dishes","useContext","useEffect","useState","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","Fetchdish","props","console","log","id","GET_RESTAURANT_DISHES","loading","error","data","variables","length","RestaurantList","restaurantID","setRestaurantID","cart","state","setState","showDishes","setShowDishes","addItem","isAuthenticated","user","GET_RESTAURANTS","restaurants","searchQuery","filter","res","name","toLowerCase","includes","search","DishesList","selectedRes","rest","restName","dishArray","dishes","mapThroughDishes","map","dish","padding","margin","price","description","restList"],"mappings":"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","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useEffect, useState } from \"react\";\n\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction Fetchdish(props) {\n  console.log(\"props.id\");\n  console.log(props.id);\n  const GET_RESTAURANT_DISHES = gql`\n    query ($id: ID!) {\n      restaurants(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: props.id },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  console.log(\"data from fetch dishes:\");\n  console.log(data);\n  // let dishes = data;\n  // console.log(\"inside fetch dishes, dishes:\");\n  // console.log(dishes);\n\n  return <h1>We in dishes fetch {data.length}</h1>;\n}\n\nfunction RestaurantList(props) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const [showDishes, setShowDishes] = useState(false);\n  const { addItem, isAuthenticated, user } = useContext(AppContext);\n\n  console.log(\"IN REST LIST, isAuthenticated:\");\n  console.log(isAuthenticated);\n  console.log(\"IN REST LIST, user:\");\n  console.log(user);\n\n  useEffect(() => {\n    setShowDishes(true);\n  }, [restaurantID]);\n\n  const GET_RESTAURANTS = gql`\n    query Restaurants {\n      restaurants {\n        id\n        name\n        description\n        dishes {\n          name\n          price\n          description\n          id\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data:`);\n  console.log(data.restaurants);\n\n  let searchQuery =\n    data.restaurants.filter((res) => {\n      return res.name.toLowerCase().includes(props.search);\n    }) || [];\n\n  function DishesList() {\n    if (restaurantID) {\n      console.log(\"data.restaurants:\");\n      console.log(data.restaurants);\n      let selectedRes = data.restaurants.filter(\n        (rest) => rest.id === restaurantID\n      );\n      console.log(\"selectedRes\");\n      console.log(selectedRes);\n\n      let restName = selectedRes[0].name;\n      console.log(\"restName\");\n      console.log(restName);\n      let dishArray = selectedRes[0].dishes;\n\n      console.log(\"dishArray\");\n      console.log(dishArray);\n      const mapThroughDishes = dishArray.map((dish) => (\n        <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={dish.id}>\n          <Card style={{ margin: \"0 10px\" }}>\n            {/* <CardImg\n              top={true}\n              style={{ height: 150, width: 150 }}\n              src={`http://localhost:1337${res.image.url}`}\n            /> */}\n            <CardBody>\n              <CardTitle>{dish.name}</CardTitle>\n              <CardText>${dish.price}</CardText>\n              <CardText>{dish.description}</CardText>\n            </CardBody>\n            <div className=\"card-footer\">\n              <Button\n                // color=\"info\"\n                outline\n                color=\"primary\"\n                onClick={() => addItem(dish)}\n              >\n                + Add To Cart\n              </Button>\n            </div>\n          </Card>\n        </Col>\n      ));\n\n      return (\n        <div>\n          <br /> <h4>{restName} Menu</h4>\n          <br />\n          {mapThroughDishes}\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n\n  // const renderDishes = (restaurantID) => {\n  //   return <Dishes restId={restaurantID}> </Dishes>;\n  // };\n\n  if (searchQuery.length > 0) {\n    const restList = searchQuery.map((res) => (\n      <Col xs=\"6\" sm=\"4\" key={res.id}>\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n          {/* <CardImg\n            top={true}\n            style={{ height: 200 }}\n            src={`http://localhost:1337` + res.image.url}\n          /> */}\n          <CardBody>\n            <CardTitle tag=\"h5\">{res.name}</CardTitle>\n            <CardText>{res.description}</CardText>\n          </CardBody>\n          <div className=\"card-footer\">\n            <Button\n              color=\"info\"\n              onClick={() => {\n                //    setShowDishes(false);\n                setRestaurantID(res.id);\n              }}\n            >\n              Explore\n            </Button>\n          </div>\n        </Card>\n      </Col>\n    ));\n\n    return (\n      <Container>\n        {isAuthenticated && <h4>HI USER</h4>}\n        {!isAuthenticated && <h4>Pls log in</h4>}\n        <Row xs=\"3\">{restList}</Row>\n        <DishesList />\n        {/* <Row xs=\"3\">{renderDishes(restaurantID)}</Row> */}\n        {/* <Fetchdish id={restaurantID} /> */}\n      </Container>\n    );\n  } else {\n    return <h1> No Restaurants Found</h1>;\n  }\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}