{"ast":null,"code":"var _jsxFileName = \"/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Cart from \"../components/cart\"; // import {\n//   ApolloProvider,\n//   ApolloClient,\n//   HttpLink,\n//   InMemoryCache,\n// } from \"@apollo/client\";\n\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql } from \"@apollo/client\";\nimport RestaurantList from \"../components/restaurantList\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\n\nfunction Home() {\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  const url = process.env.MONGO_URI;\n  console.log(\"Mongo url: \" + url); //this works\n\n  console.log(`URL: ${API_URL}`); //this prints localhost:1337\n\n  const {\n    0: query,\n    1: setQuery\n  } = useState(\"\"); // const link = new HttpLink({ uri: `${API_URL}/graphql` });\n  // // const link = new HttpLink({ uri: `${url}` });\n  // const cache = new InMemoryCache();\n  // const client = new ApolloClient({ link, cache });\n  // console.log(\"link: \" + JSON.stringify(link));\n\n  console.log(\"^^^^^^^^^^^^^\");\n  const client = new ApolloClient({\n    uri: \"https://flyby-gateway.herokuapp.com/\",\n    cache: new InMemoryCache()\n  }); // const client = ...\n\n  client.query({\n    query: gql`\n        query GetLocations {\n          locations {\n            id\n            name\n            description\n            photo\n          }\n        }\n      `\n  }).then(result => console.log(\"result: \" + result));\n  console.log(\"^^^^^^^^^^^^^\");\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \" Local Restaurants\"), __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \" Search \"), __jsx(Input, {\n    onChange: e => setQuery(e.target.value.toLocaleLowerCase()),\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), __jsx(RestaurantList, {\n    search: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), __jsx(Cart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \" \"));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/pages/index.js"],"names":["React","useState","Cart","ApolloClient","InMemoryCache","ApolloProvider","gql","RestaurantList","InputGroup","InputGroupAddon","Input","Home","API_URL","process","env","NEXT_PUBLIC_API_URL","url","MONGO_URI","console","log","query","setQuery","client","uri","cache","then","result","e","target","value","toLocaleLowerCase"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,GAJF,QAKO,gBALP;AAMA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,KAAtC,QAAmD,YAAnD;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACA,QAAMC,GAAG,GAAGH,OAAO,CAACC,GAAR,CAAYG,SAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBH,GAA5B,EAHc,CAGoB;;AAClCE,EAAAA,OAAO,CAACC,GAAR,CAAa,QAAOP,OAAQ,EAA5B,EAJc,CAIkB;;AAChC,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBpB,QAAQ,CAAC,EAAD,CAAlC,CALc,CAMd;AACA;AACA;AACA;AACA;;AAEAiB,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,QAAMG,MAAM,GAAG,IAAInB,YAAJ,CAAiB;AAC9BoB,IAAAA,GAAG,EAAE,sCADyB;AAE9BC,IAAAA,KAAK,EAAE,IAAIpB,aAAJ;AAFuB,GAAjB,CAAf,CAbc,CAkBd;;AAEAkB,EAAAA,MAAM,CACHF,KADH,CACS;AACLA,IAAAA,KAAK,EAAEd,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVW,GADT,EAaGmB,IAbH,CAaSC,MAAD,IAAYR,OAAO,CAACC,GAAR,CAAY,aAAaO,MAAzB,CAbpB;AAeAR,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AACE,IAAA,QAAQ,EAAGK,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,iBAAf,EAAD,CAD3B;AAEE,IAAA,KAAK,EAAEV,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,EAYE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAbF,CADF;AAiBD;;AACD,eAAeT,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Cart from \"../components/cart\";\n// import {\n//   ApolloProvider,\n//   ApolloClient,\n//   HttpLink,\n//   InMemoryCache,\n// } from \"@apollo/client\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  gql,\n} from \"@apollo/client\";\nimport RestaurantList from \"../components/restaurantList\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\n\nfunction Home() {\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  const url = process.env.MONGO_URI;\n  console.log(\"Mongo url: \" + url); //this works\n  console.log(`URL: ${API_URL}`); //this prints localhost:1337\n  const [query, setQuery] = useState(\"\");\n  // const link = new HttpLink({ uri: `${API_URL}/graphql` });\n  // // const link = new HttpLink({ uri: `${url}` });\n  // const cache = new InMemoryCache();\n  // const client = new ApolloClient({ link, cache });\n  // console.log(\"link: \" + JSON.stringify(link));\n\n  console.log(\"^^^^^^^^^^^^^\");\n  const client = new ApolloClient({\n    uri: \"https://flyby-gateway.herokuapp.com/\",\n    cache: new InMemoryCache(),\n  });\n\n  // const client = ...\n\n  client\n    .query({\n      query: gql`\n        query GetLocations {\n          locations {\n            id\n            name\n            description\n            photo\n          }\n        }\n      `,\n    })\n    .then((result) => console.log(\"result: \" + result));\n\n  console.log(\"^^^^^^^^^^^^^\");\n\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"search\">\n        <h2> Local Restaurants</h2>\n        <InputGroup>\n          <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n          <Input\n            onChange={(e) => setQuery(e.target.value.toLocaleLowerCase())}\n            value={query}\n          />\n        </InputGroup>\n        <br></br>\n      </div>\n      <RestaurantList search={query} />\n      <Cart> </Cart>\n    </ApolloProvider>\n  );\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}