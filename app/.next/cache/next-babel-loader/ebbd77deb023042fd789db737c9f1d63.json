{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/client/pages/_app.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport Head from \"next/head\";\nimport AppContext from \"../components/context\";\nimport Home from \"./index\";\nimport Layout from \"../components/layout\";\nimport Cookie from \"js-cookie\";\n\nfunction MyApp(props) {\n  _s();\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart,\n      addItem = _useContext.addItem,\n      removeItem = _useContext.removeItem,\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useState = useState({\n    cart: cart\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var Component = props.Component,\n      pageProps = props.pageProps;\n  console.log(\"AppContext:\");\n  console.log(AppContext);\n  var appContext = useContext(AppContext);\n  console.log(\"appContext\");\n  console.log(appContext);\n  console.log(\"_app appContext.isAuthenticated\");\n  console.log(appContext.isAuthenticated);\n  var authed = appContext.isAuthenticated;\n  console.log(\"authed\");\n  console.log(authed);\n  console.log(\"_app appContext.user\");\n  console.log(appContext.user); ////Not called anywhere yet\n\n  setUser = function setUser(user) {\n    setState({\n      user: user\n    });\n  }; ////empty function exported from context. Defined here\n\n\n  addItem = function addItem(item) {\n    console.log(\"in AddItem in _app\");\n    var items = state.cart.items;\n    console.log(\"items: \");\n    console.log(items);\n    console.log(\"items length: \" + items.length); //state stores the items and the qty locally in state.cart = items\n    //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n\n    var foundItem = true;\n\n    if (items.length > 0) {\n      console.log(\"inside the if block\");\n      foundItem = items.find(function (i) {\n        return i.id === item.id;\n      });\n      console.log(\"foundItem: \" + foundItem); //console.log(\"i.id: \" + i.id);\n\n      console.log(\"item.id: \" + item.id); //if cart is not empty, search for item matching the id of the item that called addItem\n      //assign it to foundItem. If none found foundItem becomes false\n\n      if (!foundItem) foundItem = false;\n    } else {\n      //if cart is empty:\n      foundItem = false;\n    }\n\n    console.log(\"Found Item value: \".concat(JSON.stringify(foundItem))); // if item is not new, add to cart, set quantity to 1\n\n    if (!foundItem) {\n      //foundItem is false when cart is empty or when item.id doesnt match whats in it\n      //set quantity property to 1\n      console.log(\"if block, foundItem is falsy\");\n      var temp = JSON.parse(JSON.stringify(item));\n      console.log(\"temp:\");\n      console.log(temp); //you can't set item quantity directly because this is React\n\n      temp.quantity = 1;\n      var newCart = {\n        items: [].concat(_toConsumableArray(state.cart.items), [temp]),\n        //copy of item is added to cart with QTY of 1\n        total: state.cart.total + item.price\n      };\n      setState({\n        cart: newCart\n      }); //state updated\n\n      console.log(\"Total items: \".concat(JSON.stringify(newCart)));\n    } else {\n      //foundItem is truthy, meaning there are things in the cart and the item added matches whats in the cart\n      // we already have it so just increase quantity ++\n      console.log(\"else block, foundItem is truthy meaning there are things in the cart and the item added matches whats in the cart\");\n      console.log(\"Total so far:  \".concat(state.cart.total)); //not sure if newCart is in scope of this else statement but it works...\n\n      newCart = {\n        items: items.map(function (item) {\n          //map through the items in the cart, match the id's\n          if (item.id === foundItem.id) {\n            //Object.assign merges the obejcts after {} with same props into a new obj,\n            //in this case it will copy item, and update it's quantity to be +1 of what it was\n            //this will essentially return a new object with an update QTY\n            return Object.assign({}, item, {\n              quantity: item.quantity + 1\n            });\n          } else {\n            //not sure if this condition is necessary since we are already in the else statement for the truthiness of foundItem\n            return item;\n          }\n        }),\n        total: state.cart.total + item.price\n      };\n    }\n\n    setState({\n      cart: newCart\n    }); // problem is this is not updated yet\n\n    console.log(\"state reset to cart:\".concat(JSON.stringify(state)));\n  }; ////removeItem is also in the context with no functionality\n\n\n  removeItem = function removeItem(item) {\n    //similar to above, items is whats already in the cart\n    var items = state.cart.items; //check for item already in cart\n\n    var foundItem = items.find(function (i) {\n      return i.id === item.id;\n    }); //find the item for which id of the item added matches\n\n    if (foundItem.quantity > 1) {\n      //if item added is already in the cart and the QTY is greater than 1, map through the items\n      var newCart = {\n        //key \"items\" is a copy of the item matching the id with a QTY increased by one.\n        items: items.map(function (item) {\n          if (item.id === foundItem.id) {\n            return Object.assign({}, item, {\n              quantity: item.quantity - 1\n            });\n          } else {\n            return item;\n          }\n        }),\n        total: state.cart.total - item.price\n      }; //console.log(`NewCart after remove: ${JSON.stringify(newCart)}`)\n    } else {\n      // only 1 item matchng the id in the cart so remove the whole item\n      console.log(\"Try remove item \".concat(JSON.stringify(foundItem))); //find the index of the item matching the id of foundItem and splice it out\n\n      var index = items.findIndex(function (i) {\n        return i.id === foundItem.id;\n      });\n      items.splice(index, 1); //not sure if this is a problem with React to uopdate item directly\n\n      var newCart = {\n        items: items,\n        total: state.cart.total - item.price\n      };\n    }\n\n    setState({\n      cart: newCart\n    });\n  };\n\n  return (//app.js provides the values for this contxt. Otherwise it's empty values. Cart and Dishes all import this context\n    //Cart accesses  cart, addItem, removeItem, Dishes accesses addItem\n    __jsx(AppContext.Provider, {\n      value: {\n        cart: state.cart,\n        addItem: addItem,\n        removeItem: removeItem,\n        isAuthenticated: authed,\n        user: null,\n        setUser: function setUser() {}\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\",\n      integrity: \"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\",\n      crossOrigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    })), __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }))))\n  );\n}\n\n_s(MyApp, \"AfJhNSWi1RLjuOEKi9ZJbLFm0Do=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/client/pages/_app.js"],"names":["useContext","useState","Head","AppContext","Home","Layout","Cookie","MyApp","props","cart","addItem","removeItem","user","setUser","state","setState","Component","pageProps","console","log","appContext","isAuthenticated","authed","item","items","length","foundItem","find","i","id","JSON","stringify","temp","parse","quantity","newCart","total","price","map","Object","assign","index","findIndex","splice"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport Head from \"next/head\";\nimport AppContext from \"../components/context\";\nimport Home from \"./index\";\nimport Layout from \"../components/layout\";\nimport Cookie from \"js-cookie\";\n\nfunction MyApp(props) {\n  var { cart, addItem, removeItem, user, setUser } = useContext(AppContext);\n  const [state, setState] = useState({ cart: cart });\n  const { Component, pageProps } = props;\n\n  console.log(\"AppContext:\");\n\n  console.log(AppContext);\n  const appContext = useContext(AppContext);\n  console.log(\"appContext\");\n  console.log(appContext);\n  console.log(\"_app appContext.isAuthenticated\");\n  console.log(appContext.isAuthenticated);\n  const authed = appContext.isAuthenticated;\n\n  console.log(\"authed\");\n  console.log(authed);\n\n  console.log(\"_app appContext.user\");\n  console.log(appContext.user);\n\n  ////Not called anywhere yet\n  setUser = (user) => {\n    setState({ user });\n  };\n\n  ////empty function exported from context. Defined here\n  addItem = (item) => {\n    console.log(\"in AddItem in _app\");\n    let { items } = state.cart;\n    console.log(\"items: \");\n    console.log(items);\n    console.log(\"items length: \" + items.length);\n\n    //state stores the items and the qty locally in state.cart = items\n    //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n    let foundItem = true;\n    if (items.length > 0) {\n      console.log(\"inside the if block\");\n\n      foundItem = items.find((i) => i.id === item.id);\n      console.log(\"foundItem: \" + foundItem);\n      //console.log(\"i.id: \" + i.id);\n      console.log(\"item.id: \" + item.id);\n\n      //if cart is not empty, search for item matching the id of the item that called addItem\n      //assign it to foundItem. If none found foundItem becomes false\n      if (!foundItem) foundItem = false;\n    } else {\n      //if cart is empty:\n      foundItem = false;\n    }\n    console.log(`Found Item value: ${JSON.stringify(foundItem)}`);\n    // if item is not new, add to cart, set quantity to 1\n    if (!foundItem) {\n      //foundItem is false when cart is empty or when item.id doesnt match whats in it\n      //set quantity property to 1\n      console.log(\"if block, foundItem is falsy\");\n      let temp = JSON.parse(JSON.stringify(item));\n      console.log(\"temp:\");\n      console.log(temp);\n      //you can't set item quantity directly because this is React\n      temp.quantity = 1;\n      var newCart = {\n        items: [...state.cart.items, temp], //copy of item is added to cart with QTY of 1\n        total: state.cart.total + item.price,\n      };\n      setState({ cart: newCart }); //state updated\n      console.log(`Total items: ${JSON.stringify(newCart)}`);\n    } else {\n      //foundItem is truthy, meaning there are things in the cart and the item added matches whats in the cart\n      // we already have it so just increase quantity ++\n      console.log(\n        \"else block, foundItem is truthy meaning there are things in the cart and the item added matches whats in the cart\"\n      );\n      console.log(`Total so far:  ${state.cart.total}`);\n      //not sure if newCart is in scope of this else statement but it works...\n      newCart = {\n        items: items.map((item) => {\n          //map through the items in the cart, match the id's\n          if (item.id === foundItem.id) {\n            //Object.assign merges the obejcts after {} with same props into a new obj,\n            //in this case it will copy item, and update it's quantity to be +1 of what it was\n            //this will essentially return a new object with an update QTY\n            return Object.assign({}, item, { quantity: item.quantity + 1 });\n          } else {\n            //not sure if this condition is necessary since we are already in the else statement for the truthiness of foundItem\n            return item;\n          }\n        }),\n        total: state.cart.total + item.price,\n      };\n    }\n    setState({ cart: newCart }); // problem is this is not updated yet\n    console.log(`state reset to cart:${JSON.stringify(state)}`);\n  };\n\n  ////removeItem is also in the context with no functionality\n  removeItem = (item) => {\n    //similar to above, items is whats already in the cart\n    let { items } = state.cart;\n    //check for item already in cart\n    const foundItem = items.find((i) => i.id === item.id);\n    //find the item for which id of the item added matches\n    if (foundItem.quantity > 1) {\n      //if item added is already in the cart and the QTY is greater than 1, map through the items\n      var newCart = {\n        //key \"items\" is a copy of the item matching the id with a QTY increased by one.\n        items: items.map((item) => {\n          if (item.id === foundItem.id) {\n            return Object.assign({}, item, { quantity: item.quantity - 1 });\n          } else {\n            return item;\n          }\n        }),\n        total: state.cart.total - item.price,\n      };\n      //console.log(`NewCart after remove: ${JSON.stringify(newCart)}`)\n    } else {\n      // only 1 item matchng the id in the cart so remove the whole item\n      console.log(`Try remove item ${JSON.stringify(foundItem)}`);\n      //find the index of the item matching the id of foundItem and splice it out\n      const index = items.findIndex((i) => i.id === foundItem.id);\n      items.splice(index, 1);\n      //not sure if this is a problem with React to uopdate item directly\n      var newCart = { items: items, total: state.cart.total - item.price };\n    }\n    setState({ cart: newCart });\n  };\n\n  return (\n    //app.js provides the values for this contxt. Otherwise it's empty values. Cart and Dishes all import this context\n    //Cart accesses  cart, addItem, removeItem, Dishes accesses addItem\n    <AppContext.Provider\n      value={{\n        cart: state.cart,\n        addItem: addItem,\n        removeItem: removeItem,\n        isAuthenticated: authed,\n        user: null,\n        setUser: () => {},\n      }}\n    >\n      <Head>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\n          integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n          crossOrigin=\"anonymous\"\n        />\n      </Head>\n      {/* Component and pageProps are props of MyApp. Where are they defined? */}\n      <Layout>\n        <Component {...pageProps} />\n      </Layout>\n    </AppContext.Provider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}