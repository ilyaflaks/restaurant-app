{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useEffect, useState } from \"react\"; //import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction Fetchdish(props) {\n  console.log(\"props.id\");\n  console.log(props.id);\n  const GET_RESTAURANT_DISHES = gql`\n    query ($id: ID!) {\n      restaurants(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: props.id\n    }\n  });\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR here\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  console.log(\"data from fetch dishes:\");\n  console.log(data); // let dishes = data;\n  // console.log(\"inside fetch dishes, dishes:\");\n  // console.log(dishes);\n\n  return __jsx(\"h1\", null, \"We in dishes fetch \", data.length);\n}\n\nfunction RestaurantList(props) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState(0);\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const {\n    0: showDishes,\n    1: setShowDishes\n  } = useState(false);\n  const {\n    addItem\n  } = useContext(AppContext);\n  useEffect(() => {\n    setShowDishes(true);\n  }, [restaurantID]);\n  const GET_RESTAURANTS = gql`\n    query Restaurants {\n      restaurants {\n        id\n        name\n        description\n        dishes {\n          name\n          price\n          description\n          id\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  console.log(`Query Data:`);\n  console.log(data.restaurants);\n  let searchQuery = data.restaurants.filter(res => {\n    return res.name.toLowerCase().includes(props.search);\n  }) || [];\n\n  function DishesList() {\n    if (restaurantID) {\n      console.log(\"data.restaurants:\");\n      console.log(data.restaurants);\n      let selectedRes = data.restaurants.filter(rest => rest.id === restaurantID);\n      console.log(\"selectedRes\");\n      console.log(selectedRes);\n      let restName = selectedRes[0].name;\n      console.log(\"restName\");\n      console.log(restName);\n      let dishArray = selectedRes[0].dishes;\n      console.log(\"dishArray\");\n      console.log(dishArray);\n      const mapThroughDishes = dishArray.map(dish => __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: dish.id\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        }\n      }, __jsx(CardBody, null, __jsx(CardTitle, null, dish.name), __jsx(CardText, null, \"$\", dish.price), __jsx(CardText, null, dish.description)), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(Button // color=\"info\"\n      , {\n        outline: true,\n        color: \"primary\",\n        onClick: () => addItem(dish)\n      }, \"+ Add To Cart\")))));\n      return __jsx(\"div\", null, __jsx(\"br\", null), \" \", __jsx(\"h4\", null, restName, \" Menu\"), __jsx(\"br\", null), mapThroughDishes);\n    } else {\n      return __jsx(\"div\", null);\n    }\n  } // const renderDishes = (restaurantID) => {\n  //   return <Dishes restId={restaurantID}> </Dishes>;\n  // };\n\n\n  if (searchQuery.length > 0) {\n    const restList = searchQuery.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: res.id\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      }\n    }, __jsx(CardBody, null, __jsx(CardTitle, {\n      tag: \"h5\"\n    }, res.name), __jsx(CardText, null, res.description)), __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(Button, {\n      color: \"info\",\n      onClick: () => {\n        //    setShowDishes(false);\n        setRestaurantID(res.id);\n      }\n    }, \"Explore\")))));\n    return __jsx(Container, null, __jsx(Row, {\n      xs: \"3\"\n    }, restList), __jsx(DishesList, null));\n  } else {\n    return __jsx(\"h1\", null, \" No Restaurants Found\");\n  }\n}\n\nexport default RestaurantList;","map":null,"metadata":{},"sourceType":"module"}