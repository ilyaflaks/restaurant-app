{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query Restaurants {\\n      restaurants {\\n        id\\n        name\\n        description\\n        dishes {\\n          name\\n          price\\n          description\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useEffect, useState } from \"react\"; //import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\"; // function DishesList(props) {\n//   const GET_DISHES = gql`\n//     query Restaurants {\n//       restaurants {\n//         dishes {\n//           name\n//           price\n//           description\n//         }\n//       }\n//     }\n//   `;\n//   const { loading, error, data } = useQuery(GET_DISHES);\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>ERROR</p>;\n//   if (!data) return <p>Not found</p>;\n//   console.log(`Dishes Query Data:`);\n//   console.log(data);\n//   return (\n//     <div>\n//       <h4>Dishessss</h4>\n//     </div>\n//   );\n// }\n\nfunction RestaurantList(props) {\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(false),\n      showDishes = _useState3[0],\n      setShowDishes = _useState3[1];\n\n  useEffect(function () {\n    console.log(\"Hoooooook!\");\n    console.log(\"restaurantID\");\n    console.log(restaurantID);\n  }, [restaurantID]);\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  console.log(\"Query Data:\");\n  console.log(data.restaurants);\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  }) || []; // let selectedRestaurant = [];\n  // function DishesList() {\n  //   if (selectedRestaurant) {\n  //     const menu = selectedRestaurant.dishes.map((dish) => {\n  //       return (\n  //         <div>\n  //           <h3>{dish.name}</h3>\n  //           <br />\n  //           <h4>{dish.price}</h4>\n  //         </div>\n  //       );\n  //     });\n  //   }\n  // }\n\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\"\n        }\n      }, __jsx(CardBody, null, __jsx(CardTitle, {\n        tag: \"h5\"\n      }, res.name), __jsx(CardText, null, res.description)), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          setRestaurantID(res.id); // console.log(res.id);\n          // console.log(restaurantID);\n\n          setShowDishes(true);\n        }\n      }, \"Explore\"))));\n    });\n    return __jsx(Container, null, __jsx(Row, {\n      xs: \"3\"\n    }, restList));\n  } else {\n    return __jsx(\"h1\", null, \" No Restaurants Found\");\n  }\n}\n\nexport default RestaurantList;","map":null,"metadata":{},"sourceType":"module"}