{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query Restaurants {\\n      restaurants {\\n        id\\n        name\\n        description\\n        dishes {\\n          name\\n          price\\n          description\\n          id\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ($id: ID!) {\\n      restaurants(id: $id) {\\n        id\\n        name\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useEffect, useState } from \"react\"; //import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction Fetchdish(props) {\n  console.log(\"props.id\");\n  console.log(props.id);\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: props.id\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR here\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  console.log(\"data from fetch dishes:\");\n  console.log(data); // let dishes = data;\n  // console.log(\"inside fetch dishes, dishes:\");\n  // console.log(dishes);\n\n  return __jsx(\"h1\", null, \"We in dishes fetch \", data.length);\n}\n\nfunction RestaurantList(props) {\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(false),\n      showDishes = _useState3[0],\n      setShowDishes = _useState3[1];\n\n  var _useContext2 = useContext(AppContext),\n      addItem = _useContext2.addItem;\n\n  useEffect(function () {\n    setShowDishes(true);\n  }, [restaurantID]);\n  var GET_RESTAURANTS = gql(_templateObject2());\n\n  var _useQuery2 = useQuery(GET_RESTAURANTS),\n      loading = _useQuery2.loading,\n      error = _useQuery2.error,\n      data = _useQuery2.data;\n\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  console.log(\"Query Data:\");\n  console.log(data.restaurants);\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  }) || [];\n\n  function DishesList() {\n    if (restaurantID) {\n      console.log(\"data.restaurants:\");\n      console.log(data.restaurants);\n      var selectedRes = data.restaurants.filter(function (rest) {\n        return rest.id === restaurantID;\n      });\n      console.log(\"selectedRes\");\n      console.log(selectedRes);\n      var restName = selectedRes[0].name;\n      console.log(\"restName\");\n      console.log(restName);\n      var dishArray = selectedRes[0].dishes;\n      console.log(\"dishArray\");\n      console.log(dishArray);\n      var mapThroughDishes = dishArray.map(function (dish) {\n        return __jsx(Col, {\n          xs: \"6\",\n          sm: \"4\",\n          style: {\n            padding: 0\n          },\n          key: dish.id\n        }, __jsx(Card, {\n          style: {\n            margin: \"0 10px\"\n          }\n        }, __jsx(CardBody, null, __jsx(CardTitle, null, dish.name), __jsx(CardText, null, \"$\", dish.price), __jsx(CardText, null, dish.description)), __jsx(\"div\", {\n          className: \"card-footer\"\n        }, __jsx(Button // color=\"info\"\n        , {\n          outline: true,\n          color: \"primary\",\n          onClick: function onClick() {\n            return addItem(dish);\n          }\n        }, \"+ Add To Cart\"))));\n      });\n      return __jsx(\"div\", null, __jsx(\"br\", null), \" \", __jsx(\"h4\", null, restName, \" Menu\"), __jsx(\"br\", null), mapThroughDishes);\n    } else {\n      return __jsx(\"div\", null);\n    }\n  } // const renderDishes = (restaurantID) => {\n  //   return <Dishes restId={restaurantID}> </Dishes>;\n  // };\n\n\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\"\n        }\n      }, __jsx(CardBody, null, __jsx(CardTitle, {\n        tag: \"h5\"\n      }, res.name), __jsx(CardText, null, res.description)), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          //    setShowDishes(false);\n          setRestaurantID(res.id);\n        }\n      }, \"Explore\"))));\n    });\n    return __jsx(Container, null, __jsx(Row, {\n      xs: \"3\"\n    }, restList), __jsx(DishesList, null));\n  } else {\n    return __jsx(\"h1\", null, \" No Restaurants Found\");\n  }\n}\n\nexport default RestaurantList;","map":null,"metadata":{},"sourceType":"module"}