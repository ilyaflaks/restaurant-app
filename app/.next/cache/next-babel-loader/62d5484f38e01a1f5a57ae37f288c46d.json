{"ast":null,"code":"var _jsxFileName = \"/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/client/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useContext, useState } from \"react\";\nimport Head from \"next/head\";\nimport AppContext from \"../components/context\";\nimport Home from \"./index\";\nimport Layout from \"../components/layout\";\nimport Cookie from \"js-cookie\";\n\nfunction MyApp(props) {\n  var {\n    cart,\n    addItem,\n    removeItem,\n    user,\n    setUser\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    cart: cart\n  });\n  const {\n    Component,\n    pageProps\n  } = props; ////Not called anywhere yet\n\n  setUser = user => {\n    setState({\n      user\n    });\n  }; ////empty function exported from context. Defined here\n\n\n  addItem = item => {\n    console.log(\"in AddItem in _app\");\n    let {\n      items\n    } = state.cart;\n    console.log(\"items: \");\n    console.log(items);\n    console.log(\"items length: \" + items.length); //state stores the items and the qty locally in state.cart = items\n    //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n\n    let foundItem = true;\n\n    if (items.length > 0) {\n      console.log(\"inside the if block\");\n      foundItem = items.find(i => i.id === item.id);\n      console.log(\"foundItem: \" + foundItem); //console.log(\"i.id: \" + i.id);\n\n      console.log(\"item.id: \" + item.id); //if cart is not empty, search for item matching the id of the item that called addItem\n      //assign it to foundItem. If none found foundItem becomes false\n\n      if (!foundItem) foundItem = false;\n    } else {\n      //if cart is empty:\n      foundItem = false;\n    }\n\n    console.log(`Found Item value: ${JSON.stringify(foundItem)}`); // if item is not new, add to cart, set quantity to 1\n\n    if (!foundItem) {\n      //foundItem is false when cart is empty or when item.id doesnt match whats in it\n      //set quantity property to 1\n      console.log(\"if block, foundItem is falsy\");\n      let temp = JSON.parse(JSON.stringify(item));\n      console.log(\"temp:\");\n      console.log(temp); //you can't set item quantity directly because this is React\n\n      temp.quantity = 1;\n      var newCart = {\n        items: [...state.cart.items, temp],\n        //copy of item is added to cart with QTY of 1\n        total: state.cart.total + item.price\n      };\n      setState({\n        cart: newCart\n      }); //state updated\n\n      console.log(`Total items: ${JSON.stringify(newCart)}`);\n    } else {\n      //foundItem is truthy, meaning there are things in the cart and the item added matches whats in the cart\n      // we already have it so just increase quantity ++\n      console.log(\"else block, foundItem is truthy\");\n      console.log(`Total so far:  ${state.cart.total}`); //not sure if newCart is in scope of this else statement but it works...\n\n      newCart = {\n        items: items.map(item => {\n          //map through the items in the cart, match the id's\n          if (item.id === foundItem.id) {\n            //Object.assign merges the obejcts after {} with same props into a new obj,\n            //in this case it will copy item, and update it's quantity to be +1 of what it was\n            //this will essentially return a new object with an update QTY\n            return Object.assign({}, item, {\n              quantity: item.quantity + 1\n            });\n          } else {\n            //not sure if this condition is necessary since we are already in the else statement for the truthiness of foundItem\n            return item;\n          }\n        }),\n        total: state.cart.total + item.price\n      };\n    }\n\n    setState({\n      cart: newCart\n    }); // problem is this is not updated yet\n\n    console.log(`state reset to cart:${JSON.stringify(state)}`);\n  }; ////removeItem is also in the context with no functionality\n\n\n  removeItem = item => {\n    //similar to above, items is whats already in the cart\n    let {\n      items\n    } = state.cart; //check for item already in cart\n\n    const foundItem = items.find(i => i.id === item.id); //find the item for which id of the item added matches\n\n    if (foundItem.quantity > 1) {\n      //if item added is already in the cart and the QTY is greater than 1, map through the items\n      var newCart = {\n        //key \"items\" is a copy of the item matching the id with a QTY increased by one.\n        items: items.map(item => {\n          if (item.id === foundItem.id) {\n            return Object.assign({}, item, {\n              quantity: item.quantity - 1\n            });\n          } else {\n            return item;\n          }\n        }),\n        total: state.cart.total - item.price\n      }; //console.log(`NewCart after remove: ${JSON.stringify(newCart)}`)\n    } else {\n      // only 1 item matchng the id in the cart so remove the whole item\n      console.log(`Try remove item ${JSON.stringify(foundItem)}`); //find the index of the item matching the id of foundItem and splice it out\n\n      const index = items.findIndex(i => i.id === foundItem.id);\n      items.splice(index, 1); //not sure if this is a problem with React to uopdate item directly\n\n      var newCart = {\n        items: items,\n        total: state.cart.total - item.price\n      };\n    }\n\n    setState({\n      cart: newCart\n    });\n  };\n\n  return (//app.js provides the values for this contxt. Otherwise it's empty values. Cart and Dishes all import this context\n    //Cart accesses  cart, addItem, removeItem, Dishes accesses addItem\n    __jsx(AppContext.Provider, {\n      value: {\n        cart: state.cart,\n        addItem: addItem,\n        removeItem: removeItem,\n        isAuthenticated: false,\n        user: null,\n        setUser: () => {}\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\",\n      integrity: \"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\",\n      crossOrigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    })), __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }))))\n  );\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/client/pages/_app.js"],"names":["useContext","useState","Head","AppContext","Home","Layout","Cookie","MyApp","props","cart","addItem","removeItem","user","setUser","state","setState","Component","pageProps","item","console","log","items","length","foundItem","find","i","id","JSON","stringify","temp","parse","quantity","newCart","total","price","map","Object","assign","index","findIndex","splice","isAuthenticated"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport Head from \"next/head\";\nimport AppContext from \"../components/context\";\nimport Home from \"./index\";\nimport Layout from \"../components/layout\";\nimport Cookie from \"js-cookie\";\n\nfunction MyApp(props) {\n  var { cart, addItem, removeItem, user, setUser } = useContext(AppContext);\n  const [state, setState] = useState({ cart: cart });\n  const { Component, pageProps } = props;\n\n  ////Not called anywhere yet\n  setUser = (user) => {\n    setState({ user });\n  };\n\n  ////empty function exported from context. Defined here\n  addItem = (item) => {\n    console.log(\"in AddItem in _app\");\n    let { items } = state.cart;\n    console.log(\"items: \");\n    console.log(items);\n    console.log(\"items length: \" + items.length);\n\n    //state stores the items and the qty locally in state.cart = items\n    //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n    let foundItem = true;\n    if (items.length > 0) {\n      console.log(\"inside the if block\");\n\n      foundItem = items.find((i) => i.id === item.id);\n      console.log(\"foundItem: \" + foundItem);\n      //console.log(\"i.id: \" + i.id);\n      console.log(\"item.id: \" + item.id);\n\n      //if cart is not empty, search for item matching the id of the item that called addItem\n      //assign it to foundItem. If none found foundItem becomes false\n      if (!foundItem) foundItem = false;\n    } else {\n      //if cart is empty:\n      foundItem = false;\n    }\n    console.log(`Found Item value: ${JSON.stringify(foundItem)}`);\n    // if item is not new, add to cart, set quantity to 1\n    if (!foundItem) {\n      //foundItem is false when cart is empty or when item.id doesnt match whats in it\n      //set quantity property to 1\n      console.log(\"if block, foundItem is falsy\");\n      let temp = JSON.parse(JSON.stringify(item));\n      console.log(\"temp:\");\n      console.log(temp);\n      //you can't set item quantity directly because this is React\n      temp.quantity = 1;\n      var newCart = {\n        items: [...state.cart.items, temp], //copy of item is added to cart with QTY of 1\n        total: state.cart.total + item.price,\n      };\n      setState({ cart: newCart }); //state updated\n      console.log(`Total items: ${JSON.stringify(newCart)}`);\n    } else {\n      //foundItem is truthy, meaning there are things in the cart and the item added matches whats in the cart\n      // we already have it so just increase quantity ++\n      console.log(\"else block, foundItem is truthy\");\n      console.log(`Total so far:  ${state.cart.total}`);\n      //not sure if newCart is in scope of this else statement but it works...\n      newCart = {\n        items: items.map((item) => {\n          //map through the items in the cart, match the id's\n          if (item.id === foundItem.id) {\n            //Object.assign merges the obejcts after {} with same props into a new obj,\n            //in this case it will copy item, and update it's quantity to be +1 of what it was\n            //this will essentially return a new object with an update QTY\n            return Object.assign({}, item, { quantity: item.quantity + 1 });\n          } else {\n            //not sure if this condition is necessary since we are already in the else statement for the truthiness of foundItem\n            return item;\n          }\n        }),\n        total: state.cart.total + item.price,\n      };\n    }\n    setState({ cart: newCart }); // problem is this is not updated yet\n    console.log(`state reset to cart:${JSON.stringify(state)}`);\n  };\n\n  ////removeItem is also in the context with no functionality\n  removeItem = (item) => {\n    //similar to above, items is whats already in the cart\n    let { items } = state.cart;\n    //check for item already in cart\n    const foundItem = items.find((i) => i.id === item.id);\n    //find the item for which id of the item added matches\n    if (foundItem.quantity > 1) {\n      //if item added is already in the cart and the QTY is greater than 1, map through the items\n      var newCart = {\n        //key \"items\" is a copy of the item matching the id with a QTY increased by one.\n        items: items.map((item) => {\n          if (item.id === foundItem.id) {\n            return Object.assign({}, item, { quantity: item.quantity - 1 });\n          } else {\n            return item;\n          }\n        }),\n        total: state.cart.total - item.price,\n      };\n      //console.log(`NewCart after remove: ${JSON.stringify(newCart)}`)\n    } else {\n      // only 1 item matchng the id in the cart so remove the whole item\n      console.log(`Try remove item ${JSON.stringify(foundItem)}`);\n      //find the index of the item matching the id of foundItem and splice it out\n      const index = items.findIndex((i) => i.id === foundItem.id);\n      items.splice(index, 1);\n      //not sure if this is a problem with React to uopdate item directly\n      var newCart = { items: items, total: state.cart.total - item.price };\n    }\n    setState({ cart: newCart });\n  };\n\n  return (\n    //app.js provides the values for this contxt. Otherwise it's empty values. Cart and Dishes all import this context\n    //Cart accesses  cart, addItem, removeItem, Dishes accesses addItem\n    <AppContext.Provider\n      value={{\n        cart: state.cart,\n        addItem: addItem,\n        removeItem: removeItem,\n        isAuthenticated: false,\n        user: null,\n        setUser: () => {},\n      }}\n    >\n      <Head>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\n          integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n          crossOrigin=\"anonymous\"\n        />\n      </Head>\n      {/* Component and pageProps are props of MyApp. Where are they defined? */}\n      <Layout>\n        <Component {...pageProps} />\n      </Layout>\n    </AppContext.Provider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}