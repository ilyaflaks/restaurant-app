{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/components/restaurantList.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query GetLocations {\\n      locations {\\n        id\\n        name\\n        description\\n        photo\\n      }\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from \"react\"; //import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  _s2();\n\n  var _s = $RefreshSig$(),\n      _this2 = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var GET_RESTAURANTS = gql(_templateObject()); //APOLLO DOCS\n\n  var GET_LOCATIONS = gql(_templateObject2());\n\n  function DisplayLocations() {\n    _s();\n\n    var _this = this;\n\n    var _useQuery = useQuery(GET_LOCATIONS),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n    if (loading) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"Loading...\");\n    if (error) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    }, \"Error :(\");\n    return data.locations.map(function (_ref) {\n      var id = _ref.id,\n          name = _ref.name,\n          description = _ref.description,\n          photo = _ref.photo;\n      return __jsx(\"div\", {\n        key: id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, __jsx(\"h3\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, name), __jsx(\"img\", {\n        width: \"400\",\n        height: \"250\",\n        alt: \"location-reference\",\n        src: \"\".concat(photo),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), __jsx(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), __jsx(\"b\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, \"About this location:\"), __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, description), __jsx(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }));\n    });\n  } //END APOLL DOCS\n\n\n  _s(DisplayLocations, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  var _useQuery2 = useQuery(GET_RESTAURANTS),\n      loading = _useQuery2.loading,\n      error = _useQuery2.error,\n      data = _useQuery2.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  }) || [];\n  var restId = searchQuery[0] ? searchQuery[0].id : null; // definet renderer for Dishes\n\n  var renderDishes = function renderDishes(restaurantID) {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 12\n      }\n    }, \" \");\n  };\n\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\"\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 200\n        },\n        src: \"http://localhost:1337\" + res.image.url,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }), __jsx(CardBody, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, __jsx(CardText, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          return setRestaurantID(res.id);\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, res.name))));\n    });\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, restList), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, renderDishes(restId)), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"BOBBLY\"), __jsx(DisplayLocations, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 12\n      }\n    }, \" No Restaurants Found\");\n  }\n}\n\n_s2(RestaurantList, \"AG1Od7CGruCtgOneqAeKWk/inGw=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/components/restaurantList.js"],"names":["gql","useQuery","Dishes","useContext","useState","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","GET_LOCATIONS","DisplayLocations","loading","error","data","locations","map","id","name","description","photo","console","log","restaurants","searchQuery","filter","res","toLowerCase","includes","search","restId","renderDishes","length","restList","margin","height","image","url"],"mappings":"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","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from \"react\";\n\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n      }\n    }\n  `;\n\n  //APOLLO DOCS\n\n  const GET_LOCATIONS = gql`\n    query GetLocations {\n      locations {\n        id\n        name\n        description\n        photo\n      }\n    }\n  `;\n\n  function DisplayLocations() {\n    const { loading, error, data } = useQuery(GET_LOCATIONS);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return data.locations.map(({ id, name, description, photo }) => (\n      <div key={id}>\n        <h3>{name}</h3>\n        <img\n          width=\"400\"\n          height=\"250\"\n          alt=\"location-reference\"\n          src={`${photo}`}\n        />\n        <br />\n        <b>About this location:</b>\n        <p>{description}</p>\n        <br />\n      </div>\n    ));\n  }\n\n  //END APOLL DOCS\n\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  let searchQuery =\n    data.restaurants.filter((res) => {\n      return res.name.toLowerCase().includes(props.search);\n    }) || [];\n\n  let restId = searchQuery[0] ? searchQuery[0].id : null;\n\n  // definet renderer for Dishes\n  const renderDishes = (restaurantID) => {\n    return <Dishes restId={restaurantID}> </Dishes>;\n  };\n\n  if (searchQuery.length > 0) {\n    const restList = searchQuery.map((res) => (\n      <Col xs=\"6\" sm=\"4\" key={res.id}>\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n          <CardImg\n            top={true}\n            style={{ height: 200 }}\n            src={`http://localhost:1337` + res.image.url}\n          />\n          <CardBody>\n            <CardText>{res.description}</CardText>\n          </CardBody>\n          <div className=\"card-footer\">\n            <Button color=\"info\" onClick={() => setRestaurantID(res.id)}>\n              {res.name}\n            </Button>\n          </div>\n        </Card>\n      </Col>\n    ));\n\n    return (\n      <Container>\n        <Row xs=\"3\">{restList}</Row>\n\n        {/* <Row xs=\"3\">{renderDishes(restaurantID)}</Row> */}\n        <Row xs=\"3\">{renderDishes(restId)}</Row>\n        <h3>BOBBLY</h3>\n        <DisplayLocations />\n      </Container>\n    );\n  } else {\n    return <h1> No Restaurants Found</h1>;\n  }\n}\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}