{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/client/components/restaurantList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query Restaurants {\\n      restaurants {\\n        id\\n        name\\n        description\\n        dishes {\\n          name\\n          price\\n          description\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query Restaurants {\\n      restaurants {\\n        dishes {\\n          name\\n          price\\n          description\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useEffect, useState } from \"react\"; //import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nvar _useState = useState(0),\n    restaurantID = _useState[0],\n    setRestaurantID = _useState[1];\n\nfunction DishesList(props) {\n  _s();\n\n  var GET_DISHES = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_DISHES),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Dishes Query Data:\");\n  console.log(data);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Dishessss\"));\n}\n\n_s(DishesList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = DishesList;\n\nfunction RestaurantList(props) {\n  _s2();\n\n  var _this = this;\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(false),\n      showDishes = _useState3[0],\n      setShowDishes = _useState3[1];\n\n  var GET_RESTAURANTS = gql(_templateObject2());\n\n  var _useQuery2 = useQuery(GET_RESTAURANTS),\n      loading = _useQuery2.loading,\n      error = _useQuery2.error,\n      data = _useQuery2.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data:\");\n  console.log(data.restaurants);\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  }) || [];\n\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, __jsx(CardTitle, {\n        tag: \"h5\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, res.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          setRestaurantID(res.id);\n          console.log(res.id);\n          console.log(restaurantID);\n          setShowDishes(true);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, \"Explore\"))));\n    });\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, restList), __jsx(DishesList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 12\n      }\n    }, \" No Restaurants Found\");\n  }\n}\n\n_s2(RestaurantList, \"X8jpfVMi4BsAA11eV9o73CdNfuM=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = RestaurantList;\nexport default RestaurantList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DishesList\");\n$RefreshReg$(_c2, \"RestaurantList\");","map":{"version":3,"sources":["/Users/ilyaflaks/Desktop/Boot Camps/MIT xPro/back-end-part3/Restauraunt-App/client/components/restaurantList.js"],"names":["gql","useQuery","Dishes","useContext","useEffect","useState","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","restaurantID","setRestaurantID","DishesList","props","GET_DISHES","loading","error","data","console","log","RestaurantList","cart","state","setState","showDishes","setShowDishes","GET_RESTAURANTS","restaurants","searchQuery","filter","res","name","toLowerCase","includes","search","length","restList","map","id","margin","description"],"mappings":"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","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useEffect, useState } from \"react\";\n\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst [restaurantID, setRestaurantID] = useState(0);\n\nfunction DishesList(props) {\n  const GET_DISHES = gql`\n    query Restaurants {\n      restaurants {\n        dishes {\n          name\n          price\n          description\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_DISHES);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n  console.log(`Dishes Query Data:`);\n  console.log(data);\n\n  return (\n    <div>\n      <h4>Dishessss</h4>\n    </div>\n  );\n}\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const [showDishes, setShowDishes] = useState(false);\n\n  const GET_RESTAURANTS = gql`\n    query Restaurants {\n      restaurants {\n        id\n        name\n        description\n        dishes {\n          name\n          price\n          description\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data:`);\n  console.log(data.restaurants);\n\n  let searchQuery =\n    data.restaurants.filter((res) => {\n      return res.name.toLowerCase().includes(props.search);\n    }) || [];\n\n  if (searchQuery.length > 0) {\n    const restList = searchQuery.map((res) => (\n      <Col xs=\"6\" sm=\"4\" key={res.id}>\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n          {/* <CardImg\n            top={true}\n            style={{ height: 200 }}\n            src={`http://localhost:1337` + res.image.url}\n          /> */}\n          <CardBody>\n            <CardTitle tag=\"h5\">{res.name}</CardTitle>\n            <CardText>{res.description}</CardText>\n          </CardBody>\n          <div className=\"card-footer\">\n            <Button\n              color=\"info\"\n              onClick={() => {\n                setRestaurantID(res.id);\n                console.log(res.id);\n                console.log(restaurantID);\n\n                setShowDishes(true);\n              }}\n            >\n              Explore\n            </Button>\n          </div>\n        </Card>\n      </Col>\n    ));\n\n    return (\n      <Container>\n        <Row xs=\"3\">{restList}</Row>\n        <DishesList />\n      </Container>\n    );\n  } else {\n    return <h1> No Restaurants Found</h1>;\n  }\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}