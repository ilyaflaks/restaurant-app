{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ($id: ID!) {\\n      restaurant(id: $id) {\\n        id\\n        name\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes(_ref) {\n  var restaurantID = _ref.restaurantID;\n  console.log(\"in Dishes component\");\n  console.log(\"restaurantID\");\n  console.log(restaurantID); //const [restaurantID, setRestaurantID] = useState();\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restaurantID\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR here\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  var restaurant = data.restaurant;\n  console.log(\"inside dishes\");\n  console.log(restaurant);\n  console.log(restaurant.dishes);\n  console.log(\"restaurantID: \" + restaurantID);\n\n  if (restId > 0) {\n    console.log(\"inside the if block, restaurant matches the search query \"); //if a restaurant matches the search query the id should be 1, 2, 3 or 4, etc\n    //map through the dishes of this restaurant and return cards with image, name, descripton, price\n\n    return __jsx(React.Fragment, null, restaurant.dishes.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        }\n      }, __jsx(CardBody, null, __jsx(CardTitle, null, res.name), __jsx(CardText, null, res.description)), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(Button // color=\"info\"\n      , {\n        outline: true,\n        color: \"primary\",\n        onClick: function onClick() {\n          return addItem(res);\n        }\n      }, \"+ Add To Cart\"))));\n    }));\n  } else {\n    return __jsx(\"h1\", null, \" No Dishes\");\n  }\n}\n\nexport default Dishes;","map":null,"metadata":{},"sourceType":"module"}